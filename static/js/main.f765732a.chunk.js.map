{"version":3,"sources":["Components/Navbar.js","Components/NavButton.js","Firebase/firebase.js","Components/Toast.js","Pages/Home/Dashboard.js","Pages/Home/AddCategory.js","Pages/Home/Categories.js","Pages/Home/AddWallpaper.js","Pages/Home/Wallpapers.js","Pages/Home/Settings.js","Pages/Home/Home.js","Pages/Login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","src","alt","NavButton","title","path","icon","history","useHistory","style","color","marginBottom","location","pathname","includes","onClick","localStorage","clear","push","name","fontSize","marginRight","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","database","storage","lightToast","background","textAlign","fontWeight","hideProgressBar","position","autoClose","darkToast","Dashboard","useState","loading","setLoading","categories","setCategories","wallpapers","setWallpapers","useEffect","ref","get","then","snapshot","list","forEach","snap","val","catch","err","toast","width","height","display","justifyContent","alignItems","type","flexWrap","marginTop","length","AddCategory","setCategoryName","imageUrl","uploadingImage","placeholder","onChange","e","target","value","margin","objectFit","Categories","deleteCategory","setDeleteCategory","exact","isOpen","content","borderRadius","top","left","right","bottom","transform","overlay","backgroundColor","map","category","index","component","AddWallpaper","setCategory","setTitle","data","Wallpapers","deleteWallpaper","setDeleteWallpaper","wallpaper","href","rel","Settings","Home","getItem","Login","username","setUsername","password","setPassword","email","a","signInWithEmailAndPassword","res","onAuthStateChanged","user","setItem","login","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f765732a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./NavBar.css\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"logo-container\">\r\n        <img src=\"https://play-lh.googleusercontent.com/u_LJdUv5nwOk1Nr46sjiBZksHB1te4J2YktXK1tyximYha8qbsRdKAVtXS7gNPsqO2Yx=s180-rw\" alt=\"Logo\" />\r\n        <p>Flutter Wallpaper App</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FontAwesome from \"react-fontawesome\";\r\n\r\nfunction NavButton({ title, path, icon }) {\r\n  let history = useHistory();\r\n  return (\r\n    <li\r\n      style={{\r\n        color: title === \"Logout\" ? \"red\" : \"\",\r\n        marginBottom: title === \"Logout\" ? \"2rem\" : \"\",\r\n      }}\r\n      className={\r\n        path === \"/\"\r\n          ? history.location.pathname === path\r\n            ? \"selected\"\r\n            : null\r\n          : history.location.pathname.includes(path)\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      onClick={() => {\r\n        if (title === \"Logout\") {\r\n          localStorage.clear();\r\n        }\r\n        history.push(path);\r\n      }}\r\n    >\r\n      <FontAwesome\r\n        name={icon}\r\n        style={{ fontSize: \"1rem\", marginRight: \"1rem\" }}\r\n      />\r\n      <text>{title}</text>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default NavButton;\r\n","import firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCG0axTXS7YqcoWz3lSvC4sWM4EQc8tTR4\",\r\n  authDomain: \"wallpaperapp-e730b.firebaseapp.com\",\r\n  projectId: \"wallpaperapp-e730b\",\r\n  storageBucket: \"wallpaperapp-e730b.appspot.com\",\r\n  messagingSenderId: \"1020646235003\",\r\n  appId: \"1:1020646235003:web:572d027e5a5e97672ffbde\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nvar auth = firebase.auth();\r\nvar storage = firebase.storage();\r\nvar database = firebase.database();\r\n\r\nexport {auth, storage, database};\r\n","import { ToastContainer, toast } from \"react-toastify\";\r\n\r\nconst lightToast = {\r\n  style: {\r\n    background: \"white\",\r\n    color: \"var(--primaryColor)\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"600\",\r\n  },\r\n  hideProgressBar: true,\r\n  position: \"bottom-center\",\r\n  autoClose: 3000,\r\n};\r\n\r\nconst darkToast = {\r\n  style: {\r\n    background: \"var(--primaryColor)\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"600\",\r\n  },\r\n  hideProgressBar: true,\r\n  position: \"bottom-center\",\r\n  autoClose: 3000,\r\n};\r\n\r\nexport { lightToast, darkToast, ToastContainer, toast };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport { useHistory } from \"react-router\";\r\nimport { database } from \"../../Firebase/firebase\";\r\nimport { darkToast, toast, ToastContainer } from \"../../Components/Toast\";\r\n\r\nfunction Dashboard() {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [wallpapers, setWallpapers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    database\r\n      .ref(\"categories/\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        let list = [];\r\n        snapshot.forEach((snap) => {\r\n          list.push(snap.val());\r\n        });\r\n        setCategories(list);\r\n      })\r\n      .catch((err) => {\r\n        toast(err, darkToast);\r\n      });\r\n\r\n    database\r\n      .ref(\"wallpapers/\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        let list = [];\r\n        snapshot.forEach((snap) => {\r\n          list.push(snap.val());\r\n        });\r\n        setWallpapers(list);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toast(err, darkToast);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"content-body\">\r\n      <div className=\"content-title\">\r\n        <p>Dashboard</p>\r\n      </div>\r\n      <div>\r\n        {loading ? (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"70vh\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <ReactLoading\r\n              type={\"spinningBubbles\"}\r\n              color={\"var(--primaryColor)\"}\r\n              width={\"4rem\"}\r\n              height={\"4rem\"}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div\r\n              className=\"row\"\r\n              style={{ flexWrap: \"wrap\", marginTop: \"2rem\" }}\r\n            >\r\n              <div\r\n                className=\"card green-card\"\r\n                onClick={() => history.push(\"/wallpapers\")}\r\n              >\r\n                <div className=\"column\">\r\n                  <span>{wallpapers.length}</span>\r\n                  Wallpapers\r\n                </div>\r\n                <FontAwesome\r\n                  name=\"photo\"\r\n                  style={{ fontSize: \"4rem\", marginRight: \"1rem\" }}\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"card blue-card\"\r\n                onClick={() => history.push(\"/categories\")}\r\n              >\r\n                <div className=\"column\">\r\n                  <span>{categories.length}</span>\r\n                  Categories\r\n                </div>\r\n                <FontAwesome\r\n                  name=\"list\"\r\n                  style={{ fontSize: \"4rem\", marginRight: \"1rem\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { useHistory } from \"react-router\";\r\nimport { storage, database } from \"../../Firebase/firebase\";\r\nimport { toast, ToastContainer, darkToast } from \"../../Components/Toast\";\r\n\r\nexport const AddCategory = () => {\r\n  const history = useHistory();\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploadingImage, setUploadingImage] = useState(false);\r\n\r\n  const uploadImage = (image) => {\r\n    setUploadingImage(true);\r\n\r\n    const fileName = `${\r\n      image.name + \"_\" + categoryName + \"_\" + Date.now().toString()\r\n    }`;\r\n\r\n    const upload = storage.ref(`categories/${fileName}`).put(image);\r\n    upload.on(\r\n      \"state_changed\",\r\n      (snapshot) => () => {},\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"categories\")\r\n          .child(`${fileName}`)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setImageUrl(url);\r\n            console.log(url);\r\n            setUploadingImage(false);\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  const upload = async () => {\r\n    if (categoryName === \"\")\r\n      return toast(\"Category name is required\", darkToast);\r\n    if (imageUrl === \"\") return toast(\"Upload Image\", darkToast);\r\n\r\n    setLoading(true);\r\n    const category = {\r\n      name: categoryName,\r\n      imageUrl: imageUrl,\r\n    };\r\n\r\n    database\r\n      .ref(\"categories/\")\r\n      .push()\r\n      .set(category)\r\n      .then((x) => {\r\n        toast(\"Category added!\", darkToast);\r\n        setLoading(false);\r\n        setTimeout(() => {\r\n          history.push(\"/categories\");\r\n        }, 1000);\r\n      })\r\n      .catch((err) => {\r\n        toast(\"Something went wrong\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-body\">\r\n      <div className=\"content-title\">\r\n        <p>Add New Category</p>\r\n      </div>\r\n      <div className=\"form\">\r\n        <p>Category Name</p>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Category Name\"\r\n          onChange={(e) => {\r\n            setCategoryName(e.target.value);\r\n          }}\r\n        />\r\n        <p>Category Image</p>\r\n        {uploadingImage ? (\r\n          <div style={{ margin: \"1rem\" }}>\r\n            <ReactLoading\r\n              type={\"spinningBubbles\"}\r\n              color={\"var(--primaryColor)\"}\r\n              width={\"2rem\"}\r\n              height={\"2rem\"}\r\n            />\r\n          </div>\r\n        ) : imageUrl !== \"\" ? (\r\n          <img\r\n            style={{\r\n              width: \"20%\",\r\n              margin: \"1rem\",\r\n              objectFit: \"contain\",\r\n            }}\r\n            src={imageUrl}\r\n            alt=\"\"\r\n          />\r\n        ) : null}\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => {\r\n            // uploadImage(e.target.files[0]);\r\n          }}\r\n        />\r\n        <button\r\n          className={loading || uploadingImage ? \"disabled\" : \"\"}\r\n          onClick={()=>{toast(\"Cannot add category in demo\", darkToast)}}//{upload}\r\n        >\r\n          {loading ? (\r\n            <ReactLoading\r\n              type={\"spinningBubbles\"}\r\n              color={\"white\"}\r\n              width={\"1.2rem\"}\r\n              height={\"1.2rem\"}\r\n            />\r\n          ) : (\r\n            \"Add Category\"\r\n          )}\r\n        </button>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n","import { Route, useHistory } from \"react-router\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AddCategory } from \"./AddCategory\";\r\nimport { database } from \"../../Firebase/firebase\";\r\nimport { darkToast, toast, ToastContainer } from \"../../Components/Toast\";\r\nimport Modal from \"react-modal\";\r\nimport FontAwesome from \"react-fontawesome\";\r\n\r\nfunction Categories() {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const [deleteCategory, setDeleteCategory] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    database\r\n      .ref(\"categories/\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        let list = [];\r\n        snapshot.forEach((snap) => {\r\n          list.push(snap);\r\n        });\r\n        setCategories(list);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toast(err, darkToast);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const removeCategory = () => {\r\n    database\r\n      .ref(`categories/${deleteCategory.key}`)\r\n      .remove()\r\n      .then(() => {\r\n        toast(\"Category deleted\", darkToast);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        toast(\"Failed to delete category\", darkToast);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Route exact path=\"/categories\">\r\n        <Modal\r\n          isOpen={deleteCategory !== \"\"}\r\n          style={{\r\n            content: {\r\n              borderRadius: \"1rem\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              right: \"auto\",\r\n              bottom: \"auto\",\r\n              marginRight: \"-50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n            },\r\n            overlay: {\r\n              backgroundColor: \"rgba(0,0,0,0.7)\",\r\n            },\r\n          }}\r\n        >\r\n          <div className=\"modalContent\">\r\n            <p className=\"modalTitle\">Delete Category?</p>\r\n            <p className=\"modalBody\">\r\n              Are you sure, want to delete <b>{`${deleteCategory && deleteCategory.val().name}`}</b> ?\r\n            </p>\r\n            {loading ? (\r\n              <>\r\n                <br />\r\n                <ReactLoading\r\n                  type={\"spinningBubbles\"}\r\n                  color={\"var(--primaryColor)\"}\r\n                  width={\"2rem\"}\r\n                  height={\"2rem\"}\r\n                />\r\n              </>\r\n            ) : (\r\n              <div className=\"modalButtonsRow\">\r\n                <button onClick={() => setDeleteCategory(\"\")}>Cancel</button>\r\n                <button\r\n                  onClick={() => {\r\n                    // setLoading(true); Uncomment this line in live\r\n                    setDeleteCategory(\"\"); //TODO: to remove\r\n                    toast(\"Cannot delete category in demo\", darkToast);\r\n                    // setTimeout(() => {\r\n                    //   removeCategory();\r\n                    // }, 2000);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Modal>\r\n        <div className=\"content-body\">\r\n          <div className=\"content-title\">\r\n            <p>Categories</p>\r\n            <button\r\n              onClick={() => {\r\n                history.push(\"/categories/new\");\r\n              }}\r\n            >\r\n              + Add New Category\r\n            </button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              height: loading ? \"70vh\" : \"\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            {loading ? (\r\n              <ReactLoading\r\n                type={\"spinningBubbles\"}\r\n                color={\"var(--primaryColor)\"}\r\n                width={\"4rem\"}\r\n                height={\"4rem\"}\r\n              />\r\n            ) : (\r\n              <table>\r\n                <tr>\r\n                  <th>No.</th>\r\n                  <th>Category Name</th>\r\n                  <th>Category Image</th>\r\n                  <th>Delete</th>\r\n                </tr>\r\n                {categories.map((category, index) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>{index + 1}</td>\r\n                      <td>{category.val().name}</td>\r\n                      <td>\r\n                        <img src={category.val().imageUrl} alt=\"\" />\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          onClick={() => {\r\n                            setDeleteCategory(category);\r\n                          }}\r\n                        >\r\n                          <FontAwesome\r\n                            name=\"trash\"\r\n                            style={{ fontSize: \"1rem\", color: \"white\" }}\r\n                          />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </table>\r\n            )}\r\n          </div>\r\n          <ToastContainer />\r\n        </div>\r\n      </Route>\r\n      <Route path=\"/categories/new\" component={AddCategory} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Categories;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { useHistory } from \"react-router\";\r\nimport { storage, database } from \"../../Firebase/firebase\";\r\nimport { toast, ToastContainer, darkToast } from \"../../Components/Toast\";\r\n\r\nexport const AddWallpaper = () => {\r\n  const history = useHistory();\r\n  const [categories, setCategories] = useState([]);\r\n  const [category, setCategory] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploadingImage, setUploadingImage] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    database\r\n      .ref(\"categories/\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        let list = [];\r\n        snapshot.forEach((snap) => {\r\n          list.push(snap.val());\r\n        });\r\n        setCategories(list);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toast(err, darkToast);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const uploadImage = (image) => {\r\n    setUploadingImage(true);\r\n\r\n    const fileName = `${image.name + \"_\" + Date.now().toString()}`;\r\n\r\n    const upload = storage.ref(`wallpapers/${fileName}`).put(image);\r\n    upload.on(\r\n      \"state_changed\",\r\n      (snapshot) => () => {},\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"wallpapers\")\r\n          .child(`${fileName}`)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setImageUrl(url);\r\n            console.log(url);\r\n            setUploadingImage(false);\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  const upload = async () => {\r\n    if(title === \"\") return toast(\"Title is required\", darkToast);\r\n    if (!category) return toast(\"Category name is required\", darkToast);\r\n    if (imageUrl === \"\") return toast(\"Upload Wallpaper\", darkToast);\r\n\r\n    setLoading(true);\r\n    const wallpaper = {\r\n      category: category,\r\n      imageUrl: imageUrl,\r\n      title: title,\r\n    };\r\n\r\n    database\r\n      .ref(\"wallpapers/\")\r\n      .push()\r\n      .set(wallpaper)\r\n      .then((x) => {\r\n        toast(\"Wallpaper added!\", darkToast);\r\n        setLoading(false);\r\n        setTimeout(() => {\r\n          history.push(\"/wallpapers\");\r\n        }, 1000);\r\n      })\r\n      .catch((err) => {\r\n        toast(\"Something went wrong\", darkToast);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-body\">\r\n      <div className=\"content-title\">\r\n        <p>Add New Wallpaper</p>\r\n      </div>\r\n      <div className=\"form\">\r\n        <p>Title</p>\r\n        <input type=\"text\" onChange={(e)=>setTitle(e.target.value)}/>\r\n        <p>Category</p>\r\n        <select onChange={(e) => setCategory(categories[e.target.value])}>\r\n          <option></option>\r\n          {categories.map((data, index) => {\r\n            return <option value={index}>{data.name}</option>;\r\n          })}\r\n        </select>\r\n        <p>Upload Wallpaper</p>\r\n        {uploadingImage ? (\r\n          <div style={{ margin: \"1rem\" }}>\r\n            <ReactLoading\r\n              type={\"spinningBubbles\"}\r\n              color={\"var(--primaryColor)\"}\r\n              width={\"2rem\"}\r\n              height={\"2rem\"}\r\n            />\r\n          </div>\r\n        ) : imageUrl !== \"\" ? (\r\n          <img\r\n            style={{\r\n              width: \"20%\",\r\n              margin: \"1rem\",\r\n              objectFit: \"contain\",\r\n            }}\r\n            src={imageUrl}\r\n            alt=\"\"\r\n          />\r\n        ) : null}\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => {\r\n            // uploadImage(e.target.files[0]);\r\n          }}\r\n        />\r\n        <button\r\n          className={loading || uploadingImage ? \"disabled\" : \"\"}\r\n          onClick={()=>{toast(\"Cannot add wallpaper in demo\", darkToast)}}//{upload}\r\n        >\r\n          {loading ? (\r\n            <ReactLoading\r\n              type={\"spinningBubbles\"}\r\n              color={\"white\"}\r\n              width={\"1.2rem\"}\r\n              height={\"1.2rem\"}\r\n            />\r\n          ) : (\r\n            \"Add Wallpaper\"\r\n          )}\r\n        </button>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n","import { Route, useHistory } from \"react-router\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AddWallpaper } from \"./AddWallpaper\";\r\nimport { database } from \"../../Firebase/firebase\";\r\nimport { darkToast, toast, ToastContainer } from \"../../Components/Toast\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport Modal from \"react-modal\";\r\n\r\nfunction Wallpapers() {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [wallpapers, setWallpapers] = useState([]);\r\n\r\n  const [deleteWallpaper, setDeleteWallpaper] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    database\r\n      .ref(\"wallpapers/\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        let list = [];\r\n        snapshot.forEach((snap) => {\r\n          list.push(snap);\r\n        });\r\n        setWallpapers(list);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toast(err, darkToast);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const removeWallpaper = () => {\r\n    database\r\n      .ref(`wallpapers/${deleteWallpaper.key}`)\r\n      .remove()\r\n      .then(() => {\r\n        toast(\"Wallpaper deleted\", darkToast);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        toast(\"Failed to delete wallpaper\", darkToast);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Route exact path=\"/wallpapers\">\r\n        <Modal\r\n          isOpen={deleteWallpaper !== \"\"}\r\n          style={{\r\n            content: {\r\n              borderRadius: \"1rem\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              right: \"auto\",\r\n              bottom: \"auto\",\r\n              marginRight: \"-50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n            },\r\n            overlay: {\r\n              backgroundColor: \"rgba(0,0,0,0.7)\",\r\n            },\r\n          }}\r\n        >\r\n          <div className=\"modalContent\">\r\n            <p className=\"modalTitle\">Delete Wallpaper?</p>\r\n            <p className=\"modalBody\">\r\n              Are you sure, want to delete{\" \"}\r\n              <b>{`${deleteWallpaper && deleteWallpaper.val().title}`}</b> ?\r\n            </p>\r\n            {loading ? (\r\n              <>\r\n                <br />\r\n                <ReactLoading\r\n                  type={\"spinningBubbles\"}\r\n                  color={\"var(--primaryColor)\"}\r\n                  width={\"2rem\"}\r\n                  height={\"2rem\"}\r\n                />\r\n              </>\r\n            ) : (\r\n              <div className=\"modalButtonsRow\">\r\n                <button onClick={() => setDeleteWallpaper(\"\")}>Cancel</button>\r\n                <button\r\n                  onClick={() => {\r\n                    // setLoading(true); Uncomment this line in live\r\n                    setDeleteWallpaper(\"\"); //TODO: to remove\r\n                    toast(\"Cannot delete wallpaper in demo\", darkToast);\r\n                    // setTimeout(() => {\r\n                    //   removeWallpaper();\r\n                    // }, 2000);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Modal>\r\n        <div className=\"content-body\">\r\n          <div className=\"content-title\">\r\n            <p>Wallpapers</p>\r\n            <button\r\n              onClick={() => {\r\n                history.push(\"/wallpapers/new\");\r\n              }}\r\n            >\r\n              + Add New Wallpaper\r\n            </button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              height: loading ? \"70vh\" : \"\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            {loading ? (\r\n              <ReactLoading\r\n                type={\"spinningBubbles\"}\r\n                color={\"var(--primaryColor)\"}\r\n                width={\"4rem\"}\r\n                height={\"4rem\"}\r\n              />\r\n            ) : (\r\n              <table>\r\n                <tr>\r\n                  <th>No.</th>\r\n                  <th>Wallpaper</th>\r\n                  <th>Category</th>\r\n                  <th>Delete</th>\r\n                </tr>\r\n                {wallpapers.map((wallpaper, index) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>{index + 1}</td>\r\n                      <td>\r\n                        <a\r\n                          href={wallpaper.val().imageUrl}\r\n                          target=\"_blank\"\r\n                          rel=\"noreferrer\"\r\n                        >\r\n                          {wallpaper.val().title}{\" \"}\r\n                          <FontAwesome name=\"external-link\"></FontAwesome>\r\n                        </a>\r\n                      </td>\r\n                      <td>{wallpaper.val().category.name}</td>\r\n                      <td>\r\n                        <button\r\n                          onClick={() => {\r\n                            setDeleteWallpaper(wallpaper);\r\n                          }}\r\n                        >\r\n                          <FontAwesome\r\n                            name=\"trash\"\r\n                            style={{ fontSize: \"1rem\", color: \"white\" }}\r\n                          />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </table>\r\n            )}\r\n          </div>\r\n          <ToastContainer />\r\n        </div>\r\n      </Route>\r\n      <Route path=\"/wallpapers/new\" component={AddWallpaper} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Wallpapers;\r\n","import ReactLoading from \"react-loading\";\r\nimport { useState } from \"react\";\r\nimport { auth } from \"../../Firebase/firebase\";\r\nimport { darkToast, toast, ToastContainer } from \"../../Components/Toast\";\r\n\r\nfunction Settings() {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n  const changePassword = () => {\r\n    setLoading(true);\r\n    if (newPassword.length < 6) {\r\n      setLoading(false);\r\n      return toast(\"Password should have minimum 6 characters\", darkToast);\r\n    }\r\n\r\n    auth.currentUser\r\n      .updatePassword(newPassword)\r\n      .then(() => {\r\n        toast(\"Password updated!\", darkToast);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toast(err, darkToast);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-body\">\r\n      <div className=\"content-title\">\r\n        <p>Settings</p>\r\n      </div>\r\n      <div className=\"form\">\r\n        <p>Change Password</p>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n          onChange={(e) => {\r\n            // setNewPassword(e.target.value);\r\n          }}\r\n        />\r\n        <button\r\n          className={loading ? \"disabled\" : \"\"}\r\n          onClick={()=>toast(\"Cannot change password in demo\", darkToast)}\r\n          // onClick={changePassword}\r\n          style={{ marginBottom: \"2rem\" }}\r\n        >\r\n          {loading ? (\r\n            <ReactLoading\r\n              type={\"spinningBubbles\"}\r\n              color={\"white\"}\r\n              width={\"1.2rem\"}\r\n              height={\"1.2rem\"}\r\n            />\r\n          ) : (\r\n            \"Change Password\"\r\n          )}\r\n        </button>\r\n        <br />\r\n        <hr />\r\n        <br />\r\n        <div\r\n          className=\"content-title\"\r\n          style={{ marginBottom: \"2rem\", marginTop: \"1rem\" }}\r\n        >\r\n          <p>Ad Settings</p>\r\n        </div>\r\n        <p>AdMob Banner Ad Unit ID</p>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Banner Ad Unit ID\"\r\n          onChange={(e) => {\r\n          }}\r\n        />\r\n        <p>AdMob Interstitial Ad Unit ID</p>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Interstitial Ad Unit ID\"\r\n          onChange={(e) => {\r\n          }}\r\n        />\r\n        <p>AdMob Rewarded Ad Unit ID</p>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Rewarded Ad Unit ID\"\r\n          onChange={(e) => {\r\n          }}\r\n        />\r\n        <button\r\n          className={loading ? \"disabled\" : \"\"}\r\n          onClick={() => toast(\"Cannot update ad settings in demo\", darkToast)}\r\n        >\r\n          {loading ? (\r\n            <ReactLoading\r\n              type={\"spinningBubbles\"}\r\n              color={\"white\"}\r\n              width={\"1.2rem\"}\r\n              height={\"1.2rem\"}\r\n            />\r\n          ) : (\r\n            \"Update Settings\"\r\n          )}\r\n        </button>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport NavBar from \"../../Components/Navbar\";\r\nimport NavButton from \"../../Components/NavButton\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport \"./Home.css\";\r\nimport \"./HomeContents.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Categories from \"./Categories\";\r\nimport Wallpapers from \"./Wallpapers\";\r\nimport Settings from \"./Settings\";\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n  if (!localStorage.getItem(\"user\")) {\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <NavBar />\r\n      <div className=\"main\">\r\n        <div className=\"menu\">\r\n          <ul className=\"column\">\r\n            <div>\r\n              <NavButton\r\n                icon=\"dashboard\"\r\n                title=\"Dashboard\"\r\n                path=\"/\"\r\n              ></NavButton>\r\n              <NavButton\r\n                icon=\"list\"\r\n                title=\"Categories\"\r\n                path=\"/categories\"\r\n              ></NavButton>\r\n              <NavButton\r\n                icon=\"photo\"\r\n                title=\"Wallpapers\"\r\n                path=\"/wallpapers\"\r\n              ></NavButton>\r\n              <NavButton\r\n                icon=\"cog\"\r\n                title=\"Settings\"\r\n                path=\"/settings\"\r\n              ></NavButton>\r\n            </div>\r\n            <NavButton icon=\"sign-out\" title=\"Logout\" path=\"/login\"></NavButton>\r\n          </ul>\r\n        </div>\r\n        <div className=\"content\">\r\n          <Route path=\"/\" exact component={Dashboard} />\r\n          <Route path=\"/categories\" component={Categories} />\r\n          <Route path=\"/wallpapers\" component={Wallpapers} />\r\n          <Route path=\"/settings\" component={Settings} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { auth } from \"../../Firebase/firebase\";\r\nimport { useHistory } from \"react-router\";\r\nimport { lightToast, toast, ToastContainer } from \"../../Components/Toast\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function login(email, password) {\r\n    setLoading(true);\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        auth.onAuthStateChanged((user) => {\r\n          if (user) {\r\n            localStorage.setItem(\"user\", user);\r\n            history.push(\"/\");\r\n          }\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        toast(\"Invalid email or password\", lightToast);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"form-container\">\r\n        <div className=\"logo-container\">\r\n          <img\r\n            src=\"https://play-lh.googleusercontent.com/u_LJdUv5nwOk1Nr46sjiBZksHB1te4J2YktXK1tyximYha8qbsRdKAVtXS7gNPsqO2Yx=s180-rw\"\r\n            alt=\"Logo\"\r\n          />\r\n          <p>Flutter Wallpaper App</p>\r\n        </div>\r\n        <p className=\"title\">Login</p>\r\n        <br />\r\n        <p>Welcome back, please login to your account.</p>\r\n        <br />\r\n        <div className=\"input-containers\">\r\n          <input\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <br />\r\n        </div>\r\n        <button onClick={() => login(username, password)}>\r\n          {!loading ? (\r\n            `Login`\r\n          ) : (\r\n            <ReactLoading\r\n              type={\"spinningBubbles\"}\r\n              color={\"white\"}\r\n              width={\"1rem\"}\r\n              height={\"1rem\"}\r\n            />\r\n          )}\r\n        </button>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Pages/Home/Home\";\nimport Login from \"./Pages/Login/Login\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router  } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}